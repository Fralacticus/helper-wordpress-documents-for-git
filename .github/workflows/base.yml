name: CI

# Contrôle quand le worflow se déclenche
on:
  # Déclenche le worflow par l'addition de 3 paramètres :
  # 1- Événements push
  # 2- Émit par la branche "main"
  # 3- Par des fichiers qui ont le chemin joker définit dans paths
  push:
    branches: [ "main" ]
    paths:
      - '**/*_brut.md'


  # Permet de lancer le workflow manuellement depuis la page Actions
  workflow_dispatch:

# Un workflow est composé d'une ou plusieurs jobs qui peuvent être exécutées séquentiellement ou en parallèle.
jobs:
  # Ce workflow contient un seul job nommé "build"
  build:
    # Le type de runner sur lequel le job se lance
    runs-on: ubuntu-latest

    # Les Steps représentent une séquence de tâches qui seront exécutées comme partie du job
    steps:
      # Extraction du dépot dans $GITHUB_WORKSPACE pour que le job puisse y accéder
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0                          
          
      # Vérifie les fichiers qui ont changées
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v25

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"            
            echo "dossier : $(dirname $file)"
            echo "fichier : $(basename $file)"
            newpath= echo "$(echo $file | sed "s/_brut//g")"
            echo "nouveau fichier : $newpath"
            #sed 's/assets/bilou/g' file > echo "$(echo $file | sed "s/_brut//g")"
            
            echo "-> On lance le script sh"
            #${{ github.action_path }}
            #chmod +x ${{ github.action_path }}/script.sh
            #${{ github.action_path }}/script.sh file          
            chmod +x "${GITHUB_WORKSPACE}/.github/workflows/script.sh"
            ${GITHUB_WORKSPACE}/.github/workflows/script.sh "$file" "$(echo $file | sed "s/_brut//g")"
          done
      
      
          
          
      
